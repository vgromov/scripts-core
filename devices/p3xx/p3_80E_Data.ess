// P3_80E Device live data object
//
object P3_80E_Data
{
	var m_ts; // timestamp is not included in object data structure,
						// P3_80E does not have RTC. Use simulated one (ts. at the moment of reception)

	P3XX_State f_state;		// data state flags
		@label = "Measurement state";
	esU32 f_msrLen; 			// measurement length in sec
		@label = "Measurement length in s";
	esF f_calibration;	// calibration value in db
	esF f_refLevel; 		// reference level in db
	esF f_sensitivity; 	// sensor sensitivity factor
	esF f_edb;
	esF f_edbMin;
	esF f_edbMax;
	esF f_e;
	esF f_eMin;
	esF f_eMax;
	
	/// Services
	function reset()
	{
		m_ts = EsDateTime::now();
		f_msrLen = 0;
		f_e = 0;
		f_eMin = 0;
		f_eMax = 0;	
	}
	
	/// Properties
	///
	/// State object access
	property state;
	read: { return f_state; }
	
	/// Timestamp access
	property ts;
	read: { return m_ts; }
	/// Timestamp string
	property tsStr;
	read: { return m_ts.asString(); }

	/// Measurement duration
	property duration;
	read: { return f_msrLen$value; }
	
	/// current data and minimax
	property e;
	read: { return f_e$value; }
	property eStrMulti;
	read: { return P3_80E_strMultiGet( $e ); }
	property eStr;
	read: { return P3_80E_fromStrMulti( $eStrMulti ); }
	
	property eMin;
	read: { return f_eMin$value; }
	property eMinStrMulti;
	read: { return P3_80E_strMultiGet( $eMin ); }
	property eMinStr;
	read: { return P3_80E_fromStrMulti( $eMinStrMulti ); }
	
	property eMax;
	read: { return f_eMax$value; }
	property eMaxStrMulti;
	read: { return P3_80E_strMultiGet( $eMax ); }
	property eMaxStr;
	read: { return P3_80E_fromStrMulti( $eMaxStrMulti ); }
}
