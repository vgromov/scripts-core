function utf8_2c_esc(inFileName)
var inFile = new EsFile(),
  outFile = new EsFile(),
  path,
  inbuff, inb,
  inbPrev,
  out = B"";
{
  inFile$flags = EsFileFlag$$Read;
  outFile$flags = EsFileFlag$$Write;

  inFile$name = inFileName;

  path = EsPath::createFromFilePath(inFileName);
  if( "in" == path$fileExt )
    path$fileExt = "";
  else
    path$fileExt = path$fileExt + ".processed";

  outFile$name = path.pathGet(
    EsPathFlag$$Default,
    ""
  );

  inFile.open();
  inbuff = inFile.readAllAsBinBuffer();
  inFile.close();

  foreach(inb in inbuff)
  {
    if( inb & 0x80 )
      out += EsStr::toByteString(
        EsStr::format(
          "\\x%0.2X",
          inb
        )
      );
    else
    {
      // Previous was an escape sequence, check if this char may be interpreted as part of hex
      // - insert noop string break to interrupt hex sequence: ""
      if( 
        !inbPrev#isEmpty() && 
        (inbPrev & 0x80) && 
        (inb in [[B'0' .. B'9'], [B'A' .. B'F'], [B'a' .. B'f']])
      )
      {
        out += B'"';
        out += B'"';
      }
      
      out += inb;
    }
    
    inbPrev = inb;
  }

  outFile.open();
  outFile.writeAllAsBinBuffer(out);
}

// Testing, comment out in release
//var testIn = "D:\\gromo\\Documents\\Projects\\esemu-1.24\\external\\hubs\\boi-01\\res\\ru\\gui.strings.cc.in";
//utf8_2c_esc(testIn);
//