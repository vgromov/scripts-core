// @file: esNxpUploaderBase.ess
// STM32-specific extension of FW uploader object
//
##require("esUploaderBase.ess");
##require("stm32Firmware.ess");

object EsUploaderSTM32 extends EsUploaderBase
{
  function enterBootWithShutdown(progressTask, rpcMaster)
  {
    progressTask.pulse("Shutting down device...");
    rpcMaster.VOID_Call(EsRpcStdId$$SHUTDOWN);
    configurePowerOff(rpcMaster$channel);
    configureBoot(rpcMaster$channel);
    // Wait until device detects power off, and shuts down OK
    EsThreadWorker::sleep(2000);
    configurePowerOn(rpcMaster$channel);
  }
  
  /// Base class overrides
  ///
  function programmerCreate()
	{
		return new EsMcuprogStm32(
			EsStm32Flag$$UseReadProt |
      EsStm32Flag$$Verify, 
			m_moniker
		);
  }
  
  // Configure and ebnter boot mode, before programming device with ISP
	function configureForBoot(rpcMaster, supportedRpcs)
	var chnl = rpcMaster$channel, 
		supportsPowerCtl = chnl.hasMethod("devicePowerSet", 1),
		progressTask = new EsProgressMonitorTask("configureForBoot");
	{
		progressTask.attachTo(__scriptHost$progressMonitor);
		
		if( supportsPowerCtl && 
				!chnl$useRS232 &&
				(EsRpcStdId$$SHUTDOWN in supportedRpcs) )
		{
			try
			{
				enterBootWithShutdown(progressTask, rpcMaster);
				return true;
			}
			catch
			{}
		}

		return false;
	}  
}
