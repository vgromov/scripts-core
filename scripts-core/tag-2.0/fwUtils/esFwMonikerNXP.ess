// @file: esFwMonikerNXP.ess
// Frimware moniker specialization object for NXP-based firmware
//
##require("esFwMonikerBase.ess");

object EsFwMonikerNXP extends EsFwMonikerBase
{
	var m_crpOffs, 
			m_xtalHz,
			m_tmpCrp;
	
	function crpCodeExtract()
	var code;
	{
		m_binary.emptyCheck();
		m_binary.fwOffsAndSizeCheck(m_crpOffs, 4);
		code = m_binary.m_fw#sliceGet(m_crpOffs, m_crpOffs+4);
		m_tmpCrp = code#asULong();
	}
		
	function crpCodeApply()
	{
		m_binary.emptyCheck();
		m_binary.fwOffsAndSizeCheck(m_crpOffs, 4);
		m_tmpFw#replace(m_tmpCrp#asBinBuffer(), m_crpOffs);
	}
	
	new(fwType, fwIdOffs, crpOffs, xtal, binary, descr, creationDateTime)
	{
		EsFwMonikerBase::new(fwType, fwIdOffs, binary, descr, creationDateTime);    
		m_xtalHz = xtal#asULong();
		m_crpOffs = addrAdjust(crpOffs#asULong());
		crpCodeExtract();
	}
		
	// Base overrides
	function tmpFwUpdate()
	{
    crpCodeApply();
		EsFwMonikerBase::tmpFwUpdate();
	}
}
