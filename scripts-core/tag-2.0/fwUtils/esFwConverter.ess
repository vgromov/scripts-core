// prepare firmware hex image for
// compiled-in usage in firmware programmer module
##require("fwUtils/esFwBinary.ess");

function convert(inFile, outFile)
var hex, binary, inf, of;
{
	inf = new EsFile(inFile, EsFileFlag$$Read|EsFileFlag$$Text|EsFileFlag$$UTF8);
	inf.open();
	hex = inf.readAllAsString();
	inf.close();

	binary = new EsFwBinary(hex);
	__scriptHost.dataPost("Writing conversion result...");
	of = new EsFile(outFile, EsFileFlag$$Write|EsFileFlag$$Text|EsFileFlag$$UTF8);
	of.open();
	of.stringWrite("// this file is automatically generated and must not be changed\n//\n");
	of.stringWrite("const c_fileHexName = \"");
	of.stringWrite(EsFile::nameExtGet(inFile));
	of.stringWrite("\";\nconst c_start = ");
	of.uint32Write(binary.m_startAddr);
	of.stringWrite(";\nconst c_offs = ");
	of.uint32Write(binary.m_offs);
	of.stringWrite(";\nconst c_bin = \"");
	of.binBufferWrite(binary.m_fw);
	of.stringWrite("\";\nconst c_created = \"");
	of.stringWrite( EsDateTime::now() );
	of.stringWrite("\";\n");
	of.close();
}
